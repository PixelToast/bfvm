; ModuleID = 'bf'
source_filename = "bf"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

declare i32 @native_putchar(i32) local_unnamed_addr

define i32 @code(i8* nocapture %0) local_unnamed_addr {
l1:
  %1 = load i8, i8* %0, align 1
  %2 = add i8 %1, 8
  store i8 %2, i8* %0, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %l4, label %l3

l3:                                               ; preds = %l1, %l10
  %4 = phi i8* [ %88, %l10 ], [ %0, %l1 ]
  %5 = getelementptr i8, i8* %4, i64 1
  %6 = load i8, i8* %5, align 1
  %7 = add i8 %6, 4
  store i8 %7, i8* %5, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr i8, i8* %4, i64 2
  %10 = load i8, i8* %9, align 1
  %.phi.trans.insert = getelementptr i8, i8* %4, i64 3
  br i1 %8, label %l3.l7_crit_edge, label %l6.lr.ph

l3.l7_crit_edge:                                  ; preds = %l3
  %.pre = load i8, i8* %.phi.trans.insert, align 1
  %.phi.trans.insert23 = getelementptr i8, i8* %4, i64 4
  %.pre24 = load i8, i8* %.phi.trans.insert23, align 1
  br label %l7

l6.lr.ph:                                         ; preds = %l3
  %11 = getelementptr i8, i8* %4, i64 4
  %12 = getelementptr i8, i8* %4, i64 5
  %.promoted = load i8, i8* %.phi.trans.insert, align 1
  %.promoted10 = load i8, i8* %11, align 1
  %.promoted12 = load i8, i8* %12, align 1
  %13 = add i8 %10, 8
  %14 = shl i8 %6, 1
  %15 = add i8 %13, %14
  %16 = mul i8 %6, 3
  %17 = add i8 %.promoted10, 12
  %18 = add i8 %.promoted, 12
  %19 = add i8 %18, %16
  %20 = add i8 %17, %16
  %21 = add i8 %7, %.promoted12
  store i8 %15, i8* %9, align 1
  store i8 %19, i8* %.phi.trans.insert, align 1
  store i8 %20, i8* %11, align 1
  store i8 %21, i8* %12, align 1
  store i8 0, i8* %5, align 1
  br label %l7

l4:                                               ; preds = %l10, %l1
  %.lcssa4 = phi i8* [ %0, %l1 ], [ %88, %l10 ]
  %22 = getelementptr i8, i8* %.lcssa4, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = tail call i32 @native_putchar(i32 %24)
  %26 = getelementptr i8, i8* %.lcssa4, i64 4
  %27 = load i8, i8* %26, align 1
  %28 = add i8 %27, -3
  store i8 %28, i8* %26, align 1
  %29 = zext i8 %28 to i32
  %30 = tail call i32 @native_putchar(i32 %29)
  %31 = load i8, i8* %26, align 1
  %32 = add i8 %31, 7
  store i8 %32, i8* %26, align 1
  %33 = zext i8 %32 to i32
  %34 = tail call i32 @native_putchar(i32 %33)
  %35 = load i8, i8* %26, align 1
  %36 = zext i8 %35 to i32
  %37 = tail call i32 @native_putchar(i32 %36)
  %38 = load i8, i8* %26, align 1
  %39 = add i8 %38, 3
  store i8 %39, i8* %26, align 1
  %40 = zext i8 %39 to i32
  %41 = tail call i32 @native_putchar(i32 %40)
  %42 = getelementptr i8, i8* %.lcssa4, i64 5
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @native_putchar(i32 %44)
  %46 = getelementptr i8, i8* %.lcssa4, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = add i8 %47, -1
  store i8 %48, i8* %46, align 1
  %49 = zext i8 %48 to i32
  %50 = tail call i32 @native_putchar(i32 %49)
  %51 = load i8, i8* %26, align 1
  %52 = zext i8 %51 to i32
  %53 = tail call i32 @native_putchar(i32 %52)
  %54 = load i8, i8* %26, align 1
  %55 = add i8 %54, 3
  store i8 %55, i8* %26, align 1
  %56 = zext i8 %55 to i32
  %57 = tail call i32 @native_putchar(i32 %56)
  %58 = load i8, i8* %26, align 1
  %59 = add i8 %58, -6
  store i8 %59, i8* %26, align 1
  %60 = zext i8 %59 to i32
  %61 = tail call i32 @native_putchar(i32 %60)
  %62 = load i8, i8* %26, align 1
  %63 = add i8 %62, -8
  store i8 %63, i8* %26, align 1
  %64 = zext i8 %63 to i32
  %65 = tail call i32 @native_putchar(i32 %64)
  %66 = load i8, i8* %42, align 1
  %67 = add i8 %66, 1
  store i8 %67, i8* %42, align 1
  %68 = zext i8 %67 to i32
  %69 = tail call i32 @native_putchar(i32 %68)
  %70 = getelementptr i8, i8* %.lcssa4, i64 6
  %71 = load i8, i8* %70, align 1
  %72 = add i8 %71, 2
  store i8 %72, i8* %70, align 1
  %73 = zext i8 %72 to i32
  %74 = tail call i32 @native_putchar(i32 %73)
  ret i32 69

l7:                                               ; preds = %l3.l7_crit_edge, %l6.lr.ph
  %75 = phi i8 [ %20, %l6.lr.ph ], [ %.pre24, %l3.l7_crit_edge ]
  %76 = phi i8 [ %19, %l6.lr.ph ], [ %.pre, %l3.l7_crit_edge ]
  %.lcssa = phi i8 [ %15, %l6.lr.ph ], [ %10, %l3.l7_crit_edge ]
  %77 = add i8 %.lcssa, 1
  store i8 %77, i8* %9, align 1
  %78 = getelementptr i8, i8* %4, i64 3
  %79 = add i8 %76, -1
  store i8 %79, i8* %78, align 1
  %80 = getelementptr i8, i8* %4, i64 4
  %81 = add i8 %75, 1
  store i8 %81, i8* %80, align 1
  %82 = getelementptr i8, i8* %4, i64 6
  %83 = load i8, i8* %82, align 1
  %84 = add i8 %83, 1
  store i8 %84, i8* %82, align 1
  br label %l8

l8:                                               ; preds = %l8, %l7
  %85 = phi i8 [ %84, %l7 ], [ %89, %l8 ]
  %86 = phi i8* [ %82, %l7 ], [ %88, %l8 ]
  %87 = icmp eq i8 %85, 0
  %88 = getelementptr i8, i8* %86, i64 -1
  %89 = load i8, i8* %88, align 1
  br i1 %87, label %l10, label %l8

l10:                                              ; preds = %l8
  %90 = add i8 %89, -1
  store i8 %90, i8* %88, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %l4, label %l3
}
